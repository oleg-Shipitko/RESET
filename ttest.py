from collections import deque
import numpy as np
import math

def time_val(value):	
	return ((ord(value[0])-48)<<18)|((ord(value[1])-48)<<12)|((ord(value[2])-48)<<6)|(ord(value[3])-48)

def dist_val(value):	
	try:	
		return ((ord(value[0])-48)<<12)|((ord(value[1])-48)<<6)|(ord(value[2])-48)
	except IndexError:
		print 'error ', value	
		return 0	

def listc(data):
	dist2 = [item[:-1] for item in data]
			
def forl(data):
	for idx, item in enumerate(data):
		data[idx] = item[:-1]

def collec(d):
	for i in xrange(1000):
		d.append(i)
	#print d

def lists(l):
	for i in xrange(1000):
		l.append(i)
	#print l

def array(n):
	for i in xrange(1000):	
		np.append(n, i)
	#print n

def concat(data):
	dist4 = ''.join(data)

def plus(data):
	item = ''	
	for i in data:
		item += i

def pi():
	step = 0
	for i in xrange(10000):
		step += math.radians(0.25)

#@profile
def update_di(answer):		
	answer = answer.split('\n')		
	#time = answer.pop(1)[:-1]
	dist = answer[2:-2]
	dist2 = [item[:-1] for item in dist]
	dist4 = ''.join(dist2)			
	step, idxh = 0, 3 			
	polar_graph = deque()
	angle = deque()	
	lend = len(dist4)
	while idxh <= lend:
		point = dist_val(dist4[idxh-3:idxh])
		#strength = dist_val(dist4[idxh:idxh+3])
		if dist_val(dist4[idxh:idxh+3]) > 1500 and point < 3000:	
			polar_graph.append(point)
			angle.append(step)
		#idxl = idxh + 3
		idxh += 6		
		step += 0.004363323129985824
	#print 'point ', polar_graph
	#print 'angle ', angle 
	combined = zip(angle, polar_graph)
	#print 'zip ', combined	
	#print len(combined)
	y = 1
	prev = 0
	beacons = []
	for i in xrange(1,len(combined)):
		if ((combined[i][0] - combined[i-1][0]) > 0.2 or i == (len(combined)-1)) and y<4:
			beacons.append(beacon_num(i,y, prev, combined))
			#print i
			y += 1
			prev = i
	#print 'beacons: ', beacons	
	return beacons, angle, polar_graph

def beacon_num(index, number, prev, combined):
	if number == 1:
		#print 'got into 1'		
		return np.mean(combined[:index], axis = 0)
	if number == 2:
		#print 'got into 2'		
		return np.mean(combined[prev:index], axis = 0)
	if number == 3:
		#print 'got into 3'
		return np.mean(combined[prev:], axis = 0)
	#print type(combined)

#d = deque()
#n = np.empty([1, 1])
#l = []

#[(0.1308996938995748, 1541), (0.13526301702956062, 1542), (0.13962634015954645, 1533), (0.14398966328953228, 1540), (0.1483529864195181, 1538), (0.15271630954950394, 1539), (0.15707963267948977, 1540), (1.2915436464757954, 2022), (1.2959069696057812, 2016), (1.300270292735767, 2021), (1.3046336158657528, 2015), (1.3089969389957385, 2021), (1.3133602621257243, 2032), (3.4121186876489538, 1592), (3.4164820107789398, 1583), (3.4208453339089258, 1582), (3.4252086570389118, 1581), (3.4295719801688977, 1583), (3.4339353032988837, 1583), (3.4382986264288697, 1590), (3.6695547523181276, 4518), (3.6739180754481136, 4493), (3.6782813985780995, 4514)]


data = ['0VM06=0VI06A0VW05o0VW05o0VW05o0VW06]0VD06`0V@06b0VA06n0V:07<0UF0f', 
 '740RS07m0MM08`0LL08f0LB08_0L?0920L?0920L=0950L10940Ko0980Ke0950KB', 
 '_09:0KX0980KL08e0KS09>0KG08d0K908a0Jm08`0Jl08j0Je08b0J^08Z0JJ08P`', 
 '0JO08b0JE08\\0JA08_0J808Z0J208^0I^08T0IY08U0IL08W0I308K0I808b0Hi0?', 
 '8h0HX08i0HK0900H708g0Ge08m0GT08m0GH08l0G80930G409W0Fc09N0F_09M0F6', 
 'S07h0FN06C?om000?om000?om000?om000?om000?om000?om000?om000?om000B',
 '?om000?om000?om000?om000?om000?om000?om000?om0000`00720]D0:b0]R0M',
 'C@0]Q0B80]N0@J0\\M07V0\\<06^0]206^0^706d?om000?om000?om000?om000?o^',
 'm000?om000?om000?om000?om000?om000?om0000hC08>?om000?om000?om0001',
 '?om000?om000?om000?om00004405f03Y06803U06N03[06b03Q07403Y07Z03V0@', 
 '7l03M08S0470<504;0@60490DU0480FM04:0H>0480HC0450I[0480Ig04>0J004H', 
 '90J>0440JG0410JU0410JW0410J^03h0J_03d0J^03d0Jb03d0Je03h0Jf03h0JfS', 
 '03e0Jk03g0Jk03j0Jj03j0Jl03j0Jk03k0Jk03k0J`03k0J`0400Jn03k0Jh03l0P', 
 'K303k0K003e0K203e0Jn03g0Ja03n0J^03j0J^03j0J^03j0JZ03k0JV0410JQ04g',
 '10JQ03k0J603g0I\\0430IX04@0IO0470HI0480H<04;0Ga04F0Fc04>0CD04F0>YM', 
 '04K0<U05K0<K05f0<N0650;106G0:]06L0:106[09G06o09G07N09A07n09=08?0k',
 '9:08e09A0:808a0;F0:N0<L0:@0>U0=C0?X0=[0H:0;J0HA0;U0HD0;e0H?0;?0HW', 
 '@0;k0G_09`0GT0:80GR0:Z0GN0;80GR0;L0GR0;L0GK0;A0GO0;Z0GO0;Z0GN0;SN',
 '0GN0;S0GO0;[0GN0;U0GF0;A0GI0;70GR0:e0GR0:i0GF09n0GJ09:0GT08h0H806', 
 '8S0I108F0I>08@0I408C0Hn08T0I<08i0IJ09>0IJ09>0IC0910IH0920IZ08m0JZ', 
 '008h0J908B0JV0800KO08A0Ka08E0Ka08E0LP09Q0Lo09\\0Nd09J0Q[09g0WP08;k', 
 '0W;07V0Uj0750U<0740T=07K0Sn07M0Sg07J0S_07O0T?07=0U206k0Ti06[0UM0@',
 '6l0Un07B0V007F0Uc07J0Uc07^0U\\07M0UR07A0Ua07\\0UY07W0UZ08E0U>07m0TW', 
 'o07f0Tm08:0Tj0840Tl08L0Tl08V0TQ0860TG07i0TP08D0TA0850T@08I0TG08`S',
 '0Sk07l0QS0880O008_0M\\0860LX07_0LE07_0KJ07l0I>08N0H309G0Gn0:80Gj0k',
 ':Z0Ga0:_0G`0:`0G[0:_0GV0:n0GN0:e0GM0:l0GN0:f0GJ0:e0G>0:Z0G?0:[0GD',
 '30:S0G50:U0G00:[0G10;40Fo0;E0Fd0;=0Fc0;C0Fe0;E0Ff0:m0F^0;20FQ0;1n', 
 '0FU0;F0FN0;D0FN0;U0FK0;C0FW0:Q0FP08l0F^08a0Fl08S0G508W0GI08Y0G^0_',
 '8[0Ha09n0Ha09n0HG09M0HM08a0HQ08W0HV08Q0I108[0I`09D0Jm09h0Mg09V0PC', 
 '90920P508M0P>08W0PD08a0P>08X0P008B0Of0890Oc07k0OX07o0OX08?0Og08@C',
 '0PN08;0Q?08L0Rm08o0U[0910Wo08U0X408U0X508Z0Wj08Y0Wb08S0Wa08T0Wi0Z',
 '8W0Wc08\\0WV08Y0W?08a0Jm0;C0GM0;K0FW09b0FF09:0E_07l0EQ07c0EH07[0EK',
 'H07[0ED07W0EG07a0EG07a0E=07T0EI07k0E>07`0EC07j0E707d0E107j0E107i]',
 '0E107h0E107[0E607j0E307n0E10800Di07j0Dl0840Do08:0Dj08;0DX08Y0DP05',
 '9@0D]0:P0D[0:e0DU0;00DU0;00DW0;00DW0;00D[0;B0DY0;L0DR0;X0DR0;X0Dl',
 'W0;e0DZ0;f0D\\0<M0DZ0<R0DZ0<a0DY0<j0D[0=>0D_0=g0Da0>B0DV0>[0DW0>hc',
 '0D[0?M0D^0?a0D^0?e0D^0>h0D^0>h0D]0>[0D]0=T0D\\0=B0D\\0=B0D_0<f0D^0d',
 '<\\0DY0<<0DV0<00DT0;j0DT0;j0D\\0;]0D\\0;L0D\\0;L0D[0;G0DY0;;0DZ0;G0Dk',
 'Z0;80D\\0;60D]0;10D^0:h0Dc0:i0D`0:_0Dd0:_0De0:_0Di0:^0Dd0:Y0De0:RN', 
 '0Dn0:D0E30:E0E20:D0Di09m0Dh0:40Dg09d0Dg09Y0Dl09a0Dj09M0Dm09F0Do0?',
 '9?0E209>0E60920EB08Z0EE0850EK07n0ES07i0EN07d0EJ07^0EY07d0E]07d0E6', 
 'Z07c0EY07_0E_07f0Ej07e0Eo07d0F207c0F707h0F707_0F>07b0FM0870FF07dj',
 '0FW0820F\\0850GU09o0H=0;20Hb0;>0Jg0;j0TS0:_0U@0:90Um09f0Wc09N0Z]06',
 '8i0Zm08Y0[408W0[808X0[808X0[<08T0[=08M0[C08U0[O08M0[J08M0[U08\\0[`',
 'V08Y0[X08Q0[d08]0[f08R0[f08R0[m08W0[m08P0\\208K0\\C08Z0\\I08Y0\\S08eX',
 '0\\N08X0\\\\08a0\\a08\\0\\g08V0\\l08`0\\c08[0\\H08a0Uj0:50T>09d0SI08m0Rm0I', 
 '8Q0R107W0Q]07Y0QN07a0QL07b0Pl07Z0Pb07j0Pb07o0P\\07>0QD06S?om000?oe',
 'm000?om000?om000?om0000SB06W0TB06c0TF06U0TI06G?om000?om000?om000?', 
 '0TL05o0T105k0TY07>0S107b0PK08h0OM0970Nl09=0N[09;0NX09<0NN09N0NP0h', 
 '9^0NA09=0NA0950ND0900NT08e0O=08m0P408e0R808J0Rm08>0S20880Rb07n0Rf',
 'U07l0RQ0860RH07j0RK07`0RT07\\0RU07^0R[07o0R_0850SH08Q0S]08L0UE088`',
 '0WD07]0Wg0830Wo07f0X?0830XK07[0XR07:0XW0750Xb07=?om000?om000?om0g',
 '00?om000?om00007P05d07H06P07M07208a0=G08L0=Z07n0>M07\\0CS07_0HM07[', 
 'X0JN07Q0Ki07N0LJ07M0LM07@0LU07>0La07;0M807>0MN07>0MT07>0MT07>0MYL', 
 '07F0Mi07A0M]07A0M]07>0MW07E0ML07E0ML07H0M<07?0Lf07Q0L907E0Ko07P0D', 
 'L107P0K<07V0KI07W0IJ07X0FA07a0BC0850>G08Q0>P07:07A07306L07O05j?oa',
 'm000?om000?om000?om000?om000?om000?om0000[N08j0[=09B0Ze09N0ZP09D:',
 '0ZN09C0ZO09?0ZQ08R0ZZ0860Z`07Q0Z;06V0Y`06:0Y^06;0Z406n0Z\\07b0^H0G', 
 '7`0`]0750`]0750MK0;B0IZ0<C0Hm0;T0H609V0H309S0Gg09i0G`0:70GW0:;0GZ', 
 ']0:<0G]0:30GR09k0GG0:00GF0:20GA0:60G@0:>0GD0:D0GQ0:G0GS0:C0GE0:9a',
 '0GE0:90GC0:=0G?0:D0GA0:B0GA0:C0GC0:C0GC0:C0G50:60G@0:10GF0:20GF0O',
 ':20GI0:20GE09n0GD09j0GE09n0GE09n0GA09[0GA09[0GH09R0GD0940GN0940Gb',
 '\\0960H<0:K0H<0:K0H=0:W0H80:?0H809`0HC09g0HC09_0H<0900HD0970HQ08lY', 
 '0H_08d0IU0970Ii09F0J609H0JU09X0L=09N?om0000[Q0820Y708^0U609_0Q10?',
 ':60O_08K0OA07H?om000?om000?om0000Q>06K0Q>06K0R>06c0T^06=?om0000V@', 
 'i08C0VY07M0XL07Y0Z00640Yi0660Yc0680Yk06A0Yo06@0Y[0670YU05n0Y[060<',
 '0Yb0620Yb0620YZ05j0YZ05j?om000?om000?om000?om000?om000?om000?om0g',
 '000`T06R0`=06V0`J06]?om000?om000?om0000c706F0cH06D0dA06;0d;05k?oQ',
 'm000?om000?om000?om000?om000?om0000bM06n0cB0;h0cM0EY0bX0<L0bI0:ma', 
 '0b60910bL08n0c;0870e207R0gj06]0ho06C0iJ05d?om000?om000?om000?om0_',
 '00?om000?om000?om000?om000?om000?om00007k06T07U06f07U06f07T06I?oF',
 'm000?om000?om0000:]09P0;?0=40;F0=_0;<0=h0;70=m0;30>00;80><0;60>E`', 
 '0:e0>70:c0>60:`0>20:H0>10:60=h09c0=M09]0=C09l0=V09l0=V09f0=T09d0>', 
 '>709V0>P09A0>I08o0=V08d0=b08H0;108>0;70860:\\08<0;d0870<207n0<X07`', 
 'f0<M07b0<L07P0<_07:0<>06Q0;Z05U0;m0550>Y05:0A305L0GG05I0HI05B0IGT', 
 '0580Id0510JH0550Ja0550JX0520Jj0500K404m0K804j0K=04j0KC04j0KB04k0B', 
 'KT04n0KT04k0KU04l0K]04l0K^04l0Ka04l0Kb04l0K^0520K_0510KX0510KR05D', 
 '10KR0510KT0510KP0510KK04k0KD04j0K804k0K904o0Jk0550J`0550J80530J0\\',
 '0510HN05@0HQ05@0F=05?0@g05B0>O04m09]04m08V05507l05O07i05c08706N0S',
 '8T07E08a07L09107S08j07b08^07i08c07o08[08A08]08C08Y08G08Y08N08V083',
 'O08Y08J08J08O08G08T08L08V08I08]08K08\\08D08[08A08]08?08_08608^0895',
 '08\\08708\\08708h08=08f08908h08;08`07k08^07m08`08208g08808i08008k0>', 
 '7n09107m09107j09408009807o09607k09807c09807c09@08209808009:08409E', 
 '@08P09C08^09C09B09U0:l09Z0<_09Z0<_09G09J09E08@09T071?om000?om000E',
 '?om000?om000?om000?om0000:S06S0:507I0:807j0:008_09l08a0:108l09b0=',
 '8[09V08X09P08R09S08Z09Y08c09S08^09R08o09K08d09D08U09J08O09@08A09c', 
 'A08B09C08M09D08W09@08n09809309308l09=09009809:08l08c08e08Z094096A', 
 '09208d08o08W08o08X08o08T08m08O08k08J08j08N08c08R08c08R08c08\\08h0I', 
 '8j08m09808i08m08e08a08d08Z08^08W08X08N08P08F08B08;08D08>08E08>08M',
 'J08W08N08[08J08Y08B08Q08:08I08<08J08808D08908C08;08G08>08M08;08GH', 
 '08508908808D07n08307m07j07h07a07g07l07a07`07h07l07j08607i08207b0J', 
 '7d07b07d07b08207d08107_07o07V07^07W07f07X07h07U07o07V08207W07n07@', 
 'd07m07d07f07U07c07V07m07V07m07R07j07P07m07N07i07L07o07O08?07M08AE', 
 '07P08M07N08P07V08m07b08b07a08X07J08107J08207B07X07F08I07909107?0a',
 '9`07C09M07?07m07<07Y07Q08@07M08807D07o07C08707H08O07H08O07E08B07M',
 'F08?07A07\\07F07=07J06c07>06507;05k07H06`06f07506k07=07V06k07T06NT',
 '07d06Z?om000?om000?om000?om00009n05l0:>06U09j08H0:B0@>0:<0An0:?0m', 
 'Cl0:80>I09k09M09d08;09i07j09d07U09f07J09h06X?om0000eT06a0eU06b0eO',
 'H06b0;Q05k0<\\07Q0?:0>I0>n0=o0=m0:l0=N0:>0=@09K0=J09o0=@09K0<M087`',
 '0;S0720;G0780:o06O?om000?om000?om000?om000?om000?om000?om000?om0^',
 '00?om000?om000?om000?om000?om000?om000?om000?om000?om000?om000?ol',
 'm000?om000?om000?om000n']

test_data = ['GE0000108000\r00P', '9BI\\P',
 '0VM06=0VI06A0VW05o0VW05o0VW05o0VW06]0VD06`0V@06b0VA06n0V:07<0UF0f',
 '740RS07m0MM08`0LL08f0LB08_0L?0920L?0920L=0950L10940Ko0980Ke0950KB', 
 '_09:0KX0980KL08e0KS09>0KG08d0K908a0Jm08`0Jl08j0Je08b0J^08Z0JJ08P`',
 '0JO08b0JE08\\0JA08_0J808Z0J208^0I^08T0IY08U0IL08W0I308K0I808b0Hi0?', 
 '8h0HX08i0HK0900H708g0Ge08m0GT08m0GH08l0G80930G409W0Fc09N0F_09M0F6',
 'S07h0FN06C?om000?om000?om000?om000?om000?om000?om000?om000?om000B',
 '?om000?om000?om000?om000?om000?om000?om000?om0000`00720]D0:b0]R0M',
 'C@0]Q0B80]N0@J0\\M07V0\\<06^0]206^0^706d?om000?om000?om000?om000?o^',
 'm000?om000?om000?om000?om000?om000?om0000hC08>?om000?om000?om0001',
 '?om000?om000?om000?om00004405f03Y06803U06N03[06b03Q07403Y07Z03V0@', 
 '7l03M08S0470<504;0@60490DU0480FM04:0H>0480HC0450I[0480Ig04>0J004H', 
 '90J>0440JG0410JU0410JW0410J^03h0J_03d0J^03d0Jb03d0Je03h0Jf03h0JfS', 
 '03e0Jk03g0Jk03j0Jj03j0Jl03j0Jk03k0Jk03k0J`03k0J`0400Jn03k0Jh03l0P', 
 'K303k0K003e0K203e0Jn03g0Ja03n0J^03j0J^03j0J^03j0JZ03k0JV0410JQ04g',
 '10JQ03k0J603g0I\\0430IX04@0IO0470HI0480H<04;0Ga04F0Fc04>0CD04F0>YM', 
 '04K0<U05K0<K05f0<N0650;106G0:]06L0:106[09G06o09G07N09A07n09=08?0k',
 '9:08e09A0:808a0;F0:N0<L0:@0>U0=C0?X0=[0H:0;J0HA0;U0HD0;e0H?0;?0HW', 
 '@0;k0G_09`0GT0:80GR0:Z0GN0;80GR0;L0GR0;L0GK0;A0GO0;Z0GO0;Z0GN0;SN',
 '0GN0;S0GO0;[0GN0;U0GF0;A0GI0;70GR0:e0GR0:i0GF09n0GJ09:0GT08h0H806', 
 '8S0I108F0I>08@0I408C0Hn08T0I<08i0IJ09>0IJ09>0IC0910IH0920IZ08m0JZ', 
 '008h0J908B0JV0800KO08A0Ka08E0Ka08E0LP09Q0Lo09\\0Nd09J0Q[09g0WP08;k', 
 '0W;07V0Uj0750U<0740T=07K0Sn07M0Sg07J0S_07O0T?07=0U206k0Ti06[0UM0@',
 '6l0Un07B0V007F0Uc07J0Uc07^0U\\07M0UR07A0Ua07\\0UY07W0UZ08E0U>07m0TW', 
 'o07f0Tm08:0Tj0840Tl08L0Tl08V0TQ0860TG07i0TP08D0TA0850T@08I0TG08`S',
 '0Sk07l0QS0880O008_0M\\0860LX07_0LE07_0KJ07l0I>08N0H309G0Gn0:80Gj0k',
 ':Z0Ga0:_0G`0:`0G[0:_0GV0:n0GN0:e0GM0:l0GN0:f0GJ0:e0G>0:Z0G?0:[0GD',
 '30:S0G50:U0G00:[0G10;40Fo0;E0Fd0;=0Fc0;C0Fe0;E0Ff0:m0F^0;20FQ0;1n', 
 '0FU0;F0FN0;D0FN0;U0FK0;C0FW0:Q0FP08l0F^08a0Fl08S0G508W0GI08Y0G^0_',
 '8[0Ha09n0Ha09n0HG09M0HM08a0HQ08W0HV08Q0I108[0I`09D0Jm09h0Mg09V0PC', 
 '90920P508M0P>08W0PD08a0P>08X0P008B0Of0890Oc07k0OX07o0OX08?0Og08@C',
 '0PN08;0Q?08L0Rm08o0U[0910Wo08U0X408U0X508Z0Wj08Y0Wb08S0Wa08T0Wi0Z',
 '8W0Wc08\\0WV08Y0W?08a0Jm0;C0GM0;K0FW09b0FF09:0E_07l0EQ07c0EH07[0EK',
 'H07[0ED07W0EG07a0EG07a0E=07T0EI07k0E>07`0EC07j0E707d0E107j0E107i]',
 '0E107h0E107[0E607j0E307n0E10800Di07j0Dl0840Do08:0Dj08;0DX08Y0DP05',
 '9@0D]0:P0D[0:e0DU0;00DU0;00DW0;00DW0;00D[0;B0DY0;L0DR0;X0DR0;X0Dl',
 'W0;e0DZ0;f0D\\0<M0DZ0<R0DZ0<a0DY0<j0D[0=>0D_0=g0Da0>B0DV0>[0DW0>hc',
 '0D[0?M0D^0?a0D^0?e0D^0>h0D^0>h0D]0>[0D]0=T0D\\0=B0D\\0=B0D_0<f0D^0d',
 '<\\0DY0<<0DV0<00DT0;j0DT0;j0D\\0;]0D\\0;L0D\\0;L0D[0;G0DY0;;0DZ0;G0Dk',
 'Z0;80D\\0;60D]0;10D^0:h0Dc0:i0D`0:_0Dd0:_0De0:_0Di0:^0Dd0:Y0De0:RN', 
 '0Dn0:D0E30:E0E20:D0Di09m0Dh0:40Dg09d0Dg09Y0Dl09a0Dj09M0Dm09F0Do0?',
 '9?0E209>0E60920EB08Z0EE0850EK07n0ES07i0EN07d0EJ07^0EY07d0E]07d0E6', 
 'Z07c0EY07_0E_07f0Ej07e0Eo07d0F207c0F707h0F707_0F>07b0FM0870FF07dj',
 '0FW0820F\\0850GU09o0H=0;20Hb0;>0Jg0;j0TS0:_0U@0:90Um09f0Wc09N0Z]06',
 '8i0Zm08Y0[408W0[808X0[808X0[<08T0[=08M0[C08U0[O08M0[J08M0[U08\\0[`',
 'V08Y0[X08Q0[d08]0[f08R0[f08R0[m08W0[m08P0\\208K0\\C08Z0\\I08Y0\\S08eX',
 '0\\N08X0\\\\08a0\\a08\\0\\g08V0\\l08`0\\c08[0\\H08a0Uj0:50T>09d0SI08m0Rm0I', 
 '8Q0R107W0Q]07Y0QN07a0QL07b0Pl07Z0Pb07j0Pb07o0P\\07>0QD06S?om000?oe',
 'm000?om000?om000?om0000SB06W0TB06c0TF06U0TI06G?om000?om000?om000?', 
 '0TL05o0T105k0TY07>0S107b0PK08h0OM0970Nl09=0N[09;0NX09<0NN09N0NP0h', 
 '9^0NA09=0NA0950ND0900NT08e0O=08m0P408e0R808J0Rm08>0S20880Rb07n0Rf',
 'U07l0RQ0860RH07j0RK07`0RT07\\0RU07^0R[07o0R_0850SH08Q0S]08L0UE088`',
 '0WD07]0Wg0830Wo07f0X?0830XK07[0XR07:0XW0750Xb07=?om000?om000?om0g',
 '00?om000?om00007P05d07H06P07M07208a0=G08L0=Z07n0>M07\\0CS07_0HM07[', 
 'X0JN07Q0Ki07N0LJ07M0LM07@0LU07>0La07;0M807>0MN07>0MT07>0MT07>0MYL', 
 '07F0Mi07A0M]07A0M]07>0MW07E0ML07E0ML07H0M<07?0Lf07Q0L907E0Ko07P0D', 
 'L107P0K<07V0KI07W0IJ07X0FA07a0BC0850>G08Q0>P07:07A07306L07O05j?oa',
 'm000?om000?om000?om000?om000?om000?om0000[N08j0[=09B0Ze09N0ZP09D:',
 '0ZN09C0ZO09?0ZQ08R0ZZ0860Z`07Q0Z;06V0Y`06:0Y^06;0Z406n0Z\\07b0^H0G', 
 '7`0`]0750`]0750MK0;B0IZ0<C0Hm0;T0H609V0H309S0Gg09i0G`0:70GW0:;0GZ', 
 ']0:<0G]0:30GR09k0GG0:00GF0:20GA0:60G@0:>0GD0:D0GQ0:G0GS0:C0GE0:9a',
 '0GE0:90GC0:=0G?0:D0GA0:B0GA0:C0GC0:C0GC0:C0G50:60G@0:10GF0:20GF0O', 
 ':20GI0:20GE09n0GD09j0GE09n0GE09n0GA09[0GA09[0GH09R0GD0940GN0940Gb',
 '\\0960H<0:K0H<0:K0H=0:W0H80:?0H809`0HC09g0HC09_0H<0900HD0970HQ08lY', 
 '0H_08d0IU0970Ii09F0J609H0JU09X0L=09N?om0000[Q0820Y708^0U609_0Q10?',
 ':60O_08K0OA07H?om000?om000?om0000Q>06K0Q>06K0R>06c0T^06=?om0000V@', 
 'i08C0VY07M0XL07Y0Z00640Yi0660Yc0680Yk06A0Yo06@0Y[0670YU05n0Y[060<',
 '0Yb0620Yb0620YZ05j0YZ05j?om000?om000?om000?om000?om000?om000?om0g',
 '000`T06R0`=06V0`J06]?om000?om000?om0000c706F0cH06D0dA06;0d;05k?oQ',
 'm000?om000?om000?om000?om000?om0000bM06n0cB0;h0cM0EY0bX0<L0bI0:ma', 
 '0b60910bL08n0c;0870e207R0gj06]0ho06C0iJ05d?om000?om000?om000?om0_',
 '00?om000?om000?om000?om000?om000?om00007k06T07U06f07U06f07T06I?oF',
 'm000?om000?om0000:]09P0;?0=40;F0=_0;<0=h0;70=m0;30>00;80><0;60>E`', 
 '0:e0>70:c0>60:`0>20:H0>10:60=h09c0=M09]0=C09l0=V09l0=V09f0=T09d0>', 
 '>709V0>P09A0>I08o0=V08d0=b08H0;108>0;70860:\\08<0;d0870<207n0<X07`', 
 'f0<M07b0<L07P0<_07:0<>06Q0;Z05U0;m0550>Y05:0A305L0GG05I0HI05B0IGT', 
 '0580Id0510JH0550Ja0550JX0520Jj0500K404m0K804j0K=04j0KC04j0KB04k0B', 
 'KT04n0KT04k0KU04l0K]04l0K^04l0Ka04l0Kb04l0K^0520K_0510KX0510KR05D', 
 '10KR0510KT0510KP0510KK04k0KD04j0K804k0K904o0Jk0550J`0550J80530J0\\',
 '0510HN05@0HQ05@0F=05?0@g05B0>O04m09]04m08V05507l05O07i05c08706N0S', 
 '8T07E08a07L09107S08j07b08^07i08c07o08[08A08]08C08Y08G08Y08N08V083',
 'O08Y08J08J08O08G08T08L08V08I08]08K08\\08D08[08A08]08?08_08608^0895',
 '08\\08708\\08708h08=08f08908h08;08`07k08^07m08`08208g08808i08008k0>', 
 '7n09107m09107j09408009807o09607k09807c09807c09@08209808009:08409E', 
 '@08P09C08^09C09B09U0:l09Z0<_09Z0<_09G09J09E08@09T071?om000?om000E',
 '?om000?om000?om000?om0000:S06S0:507I0:807j0:008_09l08a0:108l09b0=',
 '8[09V08X09P08R09S08Z09Y08c09S08^09R08o09K08d09D08U09J08O09@08A09c', 
 'A08B09C08M09D08W09@08n09809309308l09=09009809:08l08c08e08Z094096A', 
 '09208d08o08W08o08X08o08T08m08O08k08J08j08N08c08R08c08R08c08\\08h0I', 
 '8j08m09808i08m08e08a08d08Z08^08W08X08N08P08F08B08;08D08>08E08>08M',
 'J08W08N08[08J08Y08B08Q08:08I08<08J08808D08908C08;08G08>08M08;08GH', 
 '08508908808D07n08307m07j07h07a07g07l07a07`07h07l07j08607i08207b0J', 
 '7d07b07d07b08207d08107_07o07V07^07W07f07X07h07U07o07V08207W07n07@', 
 'd07m07d07f07U07c07V07m07V07m07R07j07P07m07N07i07L07o07O08?07M08AE', 
 '07P08M07N08P07V08m07b08b07a08X07J08107J08207B07X07F08I07909107?0a',
 '9`07C09M07?07m07<07Y07Q08@07M08807D07o07C08707H08O07H08O07E08B07M',
 'F08?07A07\\07F07=07J06c07>06507;05k07H06`06f07506k07=07V06k07T06NT',
 '07d06Z?om000?om000?om000?om00009n05l0:>06U09j08H0:B0@>0:<0An0:?0m', 
 'Cl0:80>I09k09M09d08;09i07j09d07U09f07J09h06X?om0000eT06a0eU06b0eO',
 'H06b0;Q05k0<\\07Q0?:0>I0>n0=o0=m0:l0=N0:>0=@09K0=J09o0=@09K0<M087`',
 '0;S0720;G0780:o06O?om000?om000?om000?om000?om000?om000?om000?om0^',
 '00?om000?om000?om000?om000?om000?om000?om000?om000?om000?om000?ol',
 'm000?om000?om000?om000n', '', '']

data_3 = ['GE0000108000\r00P', '0L;:a',
 '0:D0BY0:k0C90;00CK0:o0CE0;40CA0;70CA0;<0C@0;90C@0;:0C00;40Bn0;70G', 
 'B`0;80B`0;70B`0;50B\\0;<0BJ0;<0BJ0;;0BI0;<0BK0;<0BN0;90BB0;<0BH0;?', 
 'D0B80;>0A;0;A0@e0;G0==0;H0;=0;T0:a0;W0:a0;]0:[0;\\0:<0;[0:10;[0:1>', 
 '0;=09=0:B08`0:708Z0:208m09o08j09o08j09k08n09h08l09i08o09m09909^0A', 
 '9109l0:O0::0=?0:50=@0:A0=@0:G0<\\0:]0;M0<E0<50?K0>>0A10?[0GB0?:0JT', 
 'b0>K0K50>Y0K30>Q0Jo0>R0Jn0>^0K10>c0K00>e0Jh0>J0Jf0=h0JU0:K0J<0790', 
 '0JI06S0JL06Q0JN06U0JG06W0JG06W0JN06\\0JW06]0JL06_0J?06e0J=06h0If0i', 
 '720Hc07S0H>0=;0G]0H30G_0Jb0G^0L^0GY0La0GW0L`0GU0L^0GZ0LF0Gc0JY0G`', 
 'j0Hc0Gi0=f0Hk07;0I_06]0In06]0Il06[0Io06X0Io06Y0Il06X0I`06U0I^06Y2', 
 '0Ig06\\0Ia06[0IT06Y0IZ06W0Ih06j0IT06V0IT06V0IS06V0IL06T0IN06U0IL0J', 
 '6Q0II06W0IA06Z0IB06[0ID06Q0ID06Q0IF06X0IF06X0IG06^0I606S0I306P0IU', 
 '706L0IB06[0I606Y0I606V0I606T0I106V0I406Y0I406X0I106X0I306^0I306^\\', 
 '0Ho06[0Hj06X0Hj06X0I506`0He06Q0Hb06S0Ha06Z0Ha06Z0H`06\\0H`06\\0H_0`', 
 '6R0H_06R0H[06X0Hc06`0Hc06`0H`06`0H[06R0HY06S0HY06S0HX06V0HY06\\0Hn', 
 '\\06h0HW06_0HT06[0HX06[0HY06W0H]06X0Hc06X0H]06X0HM06O0HM06O0HS06TR', 
 '0HZ06W0HZ06Z0H\\06[0HY06W0HV06S0HV06S0HV06S0HX06W0HX06W0HX06V0HZ01', 
 '6X0Ha06]0Hf06_0Ha06P0H_06Q0HW06S0HK06S0Hd06_0H]06P0H_06P0H\\06Q0HZ', 
 '_06Y0H^06W0HZ06S0HW06P0HZ06P0Hg06W0Ha06S0Ha06S0H_06R0H]06P0Hc06Qe', 
 '0Hk06Q0Hm06M0Hi06L0I206T0I206T0I106P0Hi06H0Hk06J0Hn06L0I106L0I40R', 
 '6J0I306L0I706L0I606M0I>06Q0IE06S0I?06O0I:06K0IE06S0IE06N0I>06J0IQ', 
 '?06F0IN06P0IM06N0IL06M0IL06H0IM06E0IL06I0IM06J0IP06E0IU06I0I]06NS', 
 '0I\\06K0IW06L0IZ06J0Io06L0J006K0J006H0J006H0In06H0Ij06H0Ii06H0J101', 
 '6G0J306E0J806E0J:06C0J406@0J<06>0JI06E0JL06E0JE06C0JA06A0JE06B0J7', 
 'K06E0JI06C0J[06A0Ja06>0Jd06G0J^06C0J]06@0Jb06?0Jb06>0Jj06?0K306?3', 
 '0K506?0K306>0K906<0K>06;0KC06;0KF06?0KN06;0KU06=0KR06=0KL06?0KN0>', 
 '6@0K^06>0Kd06;0L106:0L306;0Ko0650Kl0680L70690L90660L;0630L40630LB', 
 'I0680LM0670LM0670LS0650L\\0650La0630Lc0630Ld0600Li0650M40690M2064=', 
 '0M30600M705n0MB0610MV0660MR0610MT0600M[0600Mb0610Mf05l0Mm0600N30H', 
 '630N70650N;0660ND06>0ND06>0NE06?0NE06?0NG06A0NT06I0NM06D0NK06E0Nn', 
 'J06E0NK06G0NH06H0NC06L0NF06P0NH06P0NN06S0NP06l0NS08j0Nf0:g0Ni0;6=', 
 '0O10;J0OA0;L0OD0;D0OJ0;E0OQ0;>0O^0;B0Ok0;C0Oo0;F0P80;A0P;0;D0PC02', 
 ';?0PN0;?0PU0;:0P]0;=0Pf0;50Q10;80Q@0;D0QC0;?0QA0;]0Q:0=K0PN0DM0Pf', 
 '>0I:0P00Jg0On0K10Ol0Jm0P20K60P20I>0PC0DU0P70;N0P70;N0P70;X0Ob0;A\\', 
 '0O`0;E0OS0;C0OI0;?0OG0;I0OH0;S0O90;U0O00;S0Ni0;O0Nb0;Q0N[0;]0NT05', 
 ';[0NQ0;c0NF0;f0N?0;_0N80;\\0N50;K0N50;E0N80:j0NA0:a0NQ0:]0Na0:^0NW', 
 'j0:a0O:0:^0OB0:a0OQ0:Z0O\\0:X0Ok0:X0P30:T0P?0:L0PD0:C0PO0:C0Pb0:E3', 
 '0Pm0:E0Q:0:>0QL0:>0QW0:10Q]0:=0Qg09k0R709^0RC09l0RK09c0Rf09V0Rn0R', 
 '9`0S909X0SC09S0S_09[0T809M0Th0:k0UO0<60VM0<:0Vn0<90V:0<A0U10<H0TD', 
 '@0:n0Sj0:10TQ0:B0TZ0:P0TR0:`0Sk09n0SV09e0SQ0:70SD09k0S?09l0SI0:Oa', 
 '0S?0:H0S:0:;0S40:>0Rg0:J0Ra0:P0Ra0:Z0RS0:Q0RP0:W0RO0:U0RQ0:a0RK0T', 
 ':\\0RK0:`0R@0:a0R00:a0QS0:o0QC0;=0N`0;N0Ln0;a0KQ0;e0I:0;i0HZ0<40HZ', 
 'J0<K0HD0<W0HA0<d0HB0>70HB0>I0HC0>U0H:0>]0H<0>Z0H<0>Z0H60>m0H50>iI', 
 '0H50>m0Gn0?00Gn0?10H30>o0H30>o0Gd0?20Gi0?D0Gf0?I0Ge0?I0Gc0?P0Gf0o', 
 '?P0Gm0?\\0Gl0?U0Gb0?d0Gb0?h0Gb0?h0GY0@10GV0@40GV0@30GW0@D0GU0@>0Gf', 
 'J0@D0GJ0@T0GK0@S0GL0@U0GQ0@W0GQ0@W0GT0@]0GM0@`0GH0@f0GH0@l0GI0A3^', 
 '0GI0A50G?0A?0G>0AB0G@0AC0G@0AI0G?0AS0G;0AO0G80AM0G10AI0G80AP0G?0Q', 
 'AR0G80AP0G60AZ0GD0AX0G<0Al0GA0B>0G?0BG0GA0BK0G60BI0G60BO0G40AE0G9', 
 '60@V0G70?S0Fn0?T0Fo0>\\0G40>f0G>0@=0G=0?m0G:0@K0G20@\\0Fi0A20Fi0A2H', 
 '0Fo0Ab0G30Ac0G50B60G50B60Fn0BS0Fl0BW0G00B\\0G60B[0G60B[0Fo0Bc0Fo0Z', 
 'Bc0G20Bb0G;0BZ0G<0B[0G20BP0G10BL0G00BH0G00BH0G80BF0G90B<0G;0B00G3', 
 '50Am0Fh0A^0Fm0Ad0G50A^0G40Aj0G70AU0G:0AS0G@0AO0G@0AO0G<0Ac0G50AfJ', 
 '0G50B70G50B70G>0BE0G@0B<0G;0B90G:0Am0G<0A\\0G?0AR0G?0AY0G?0AY0G900', 
 'A^0G90AY0GB0A]0GD0AO0GD0AO0GE0AK0GJ0AH0GI0A90GH0@n0GG0@l0GJ0@e0Gf', 
 'L0@_0GL0@a0GI0@m0GL0@W0GK0@X0GH0@X0GH0@T0GQ0@M0GU0@G0GR0@E0GY0@;[', 
 '0GW0?e0GU0?S0GU0?S0GU0?S0G]0?f0Ga0?m0Ga0?m0Gc0?o0Gl0?b0Gl0?[0Gk08', 
 '?K0Gk0?K0Gm0?F0Go0?D0Go0?@0H30?40Go0=k0H20>I0H40;i0H?0;m0HM0:Z0J\\', 
 ';0:h0LV0;l0Ll0;V0M50<V0M90<l0MF0=G0MG0=30MF0==0ME0<W0ME0<00MH0;`L', 
 '0MJ0;P0MN0;=0Mg0;V0NQ0<U0ON0;o0Pl0;C0j707:0j207E0io07P0jD07P0je0H', 
 '6`0ke063?om000?om00013b06V13b06V13i07814:07e14B07_14m07]16L08Y191', 
 'S08L1>@08?1>F08I1>A08P1:d08F19Q08618i07f18N07h17i07Z15`08C13;092S', 
 '12a08e12R08c11`08e0n609:0lW08m0kY08H0k<0860k208I0k208I0k208B0kZ0@', 
 '9W0kY09G0m30;f0n@0<?1490;B1C:0821CP07l1Cl07j1D@07k1DK07j1D[07d1DQ', 
 'i07f1E007j1EI07h1ES07b1Eb07`1F607^1FE07\\1FX07^1G807g1GE07]1GT07]0', 
 '1Gb07X1HA07`1HI07V1HZ07W1Hm07Y1IB07a1IT07Y1Id07X1J;07K1JV07\\1Jd0:', 
 '7J1KL07Q1KM07O1L607Q1LF07O1LX07H1Lg07I1M;07@1Mb07B1N907;1NR07C1Ni', 
 'c0771Nd06f1Nb06??om000?om000?om000?om000?om000?om000?om0001J:06F4', 
 '1IW06C1I205k1I00601Hb06`1HU06K1HO05h?om000?om000?om000?om000?om0R', 
 '00?om000?om0001EJ0691Dk06e1Dh0741D^06i1D:06=1Cb06[1Cd06`1DE06f1DL', 
 'Y06\\1E506\\1EJ06_1En06]1FG06T1F`06U1GE06O1G[06D1G_06B?om0000Pf06Uh', 
 '0Pa07Y0Pa08Q0Pf08]0Q;08S0QY08`0Qf08[0Qn08Z0R\\08a0S008b0S=08]0SR08', 
 '8`0Sb08X0T308Y0T?08V0TE08M0TU08R0Tn08`0U608]0UA08V0UE08R0UY08^0Ub', 
 'a08X0V408W0V808O0VB07\\0V^06d0V^06d?om000?om000?om000?om000?om000=', 
 '?om000?om000?om000?om000?om000?om000?om000?om000?om000?om000?om0i', 
 '00?om00019K06h19K06h18d07l18\\08818T08C18G08818B08D18=08@18808>18S', 
 '008D17e08;17\\08A17R08K17H08I17@08N17008G16m08O16m08O16_08C16]08BQ', 
 '16]08B16L08G16J08K16C08F16D08I16A07j16l06f18:07018l07319Q07=19_01', 
 '6f19W06J?om0000I006=0IE0Eo0ID0JQ0I20KY0I10L60Hl0L<0Hj0L:0Hj0L:0I>', 
 ';0J]0IG0Fe0Hk07j?om000?om0001Mo06L1N006Q1M_06J1M]06U1Mh06J?om000P', 
 '?om000?om000?om000?om0001VN05o?om000?om000?om000?om000?om000?om0g', 
 '00?om0000e506f0dl07D0d\\07L0d707K0d107V0cl0800cX0880cK08J0cL09<0cg', 
 '608`0cG0:O0c>0:h0bY0:70b_0;c0bS0;60b^0;j0bd08`?om000?om000?om0009', 
 '0c206Q?om00017^07<17_07?17U07:17G07>17P07I17R07H17Q07D17D0741790l', 
 '6g17006g17506o16m07716j07L16]07`16@09K16L0=L16J0GI16U0GI16G0=d16?', 
 'B09Q17E09F1830:P17D0;X17G0;b17M0;E?om000?om000?om000?om000?om000E', 
 '?om000?om000?om000?om000?om000?om000?om000?om000?om000?om000?om0i', 
 '00?om000?om000?om0001;C09b1;C09b1880>117m0<G17]0:]14509U10006l?oB', 
 'm000?om000?om000?om000?om000?om000?om000?om000?om000?om000?om000[', 
 '?om000?om000?om000?om0000oh06<10606O105069?om000?om000?om000?om0R', 
 '00?om000?om000?om000?om000?om000?om000?om000?om000?om000?om000?ol', 
 'm000?om000?om000?om00011C07E?om00010G08N0k408j0iX08D0i?08B0i808JK', 
 '0i208X0i208X0i;08K0iC08U0iQ08P0id08d0j]08[0k508]?om000?om000?om0A', 
 '00?om0000f406G0f908K0f=09B0f608]0ek08d?om0000HV0=d0H90>10GN0>:0GM', 
 'K0>70GF0>60Fl0=:0E^0:d0EW0:b0E>09i0E>09i0EF0:<0D]09>0Da09T0DF09Mh', 
 '0D?09>0D?09>0DH09`0DR0;80DV0=:0DP0<[0DV0<H0DW0<P0Da0<>0Da0<>0D\\0Q', 
 '<30DR0<E0DZ0<S0DW0<V0DQ0=G0D?0=L0D@0=`0DF0=S0DP0=G0D^0=F0D[0=40D1', 
 '\\0=70Dd0<h0Dj0=30E:0=S0EF0>G0ED0>H0E>0>O0E<0>L0E?0>F0EG0>A0EE0>?=', 
 '0E@0>70E?0>40E<0><0E>0<?0ES0:Y0GX09K0Hb08c0I60910I=0:20I<0:20HK0k', 
 '9U0E30:D0Al0;_0@I0<\\0?n0=00?m0==0?k0<j0?n0=A0?c0<i0?Z0<60?Q0;f0>H', 
 'd0;>0>[0:k0>g0;60>g0;60>[0;D0>n0;J0?;0;J0?b0;:0@00;;0@L0:_0@W0:bC', 
 '0?O0;G0>T0;50>P0;80>[0;A0>Z0;70>:0910>:0910>808N0>e07;0>n0770?@00', 
 '7B0>c07=0>g07i0>`07`0>g07n0?;08e0?;08e0>R0990>N0<30>C0<m0>C0=L0>O', 
 'E0<A0>L0<10>G0;X0>Y0<1U', '', '']

if __name__ == '__main__':
	lidar = update_di(data_3)
	print lidar
	print len(lidar)


# i need to build beacons on the assumption what robot sees

# fov_start = self.orientation - 135
# fov_end = self.orientation + 135

# def angle(pt1, pt2):
#     x1, y1 = pt1
#     x2, y2 = pt2
#     inner_product = x1*x2 + y1*y2
#     len1 = math.hypot(x1, y1)
#     len2 = math.hypot(x2, y2)
#     return math.acos(inner_product/(len1*len2))

# def pol2cart(rho, phi):
#     x = rho * np.cos(phi)
#     y = rho * np.sin(phi)
#     return(x, y)

# def rtpi(x, y):
#     hypotenuse = math.hypot(x, y)
#     angle = round(math.degrees(math.atan2(y, x)))
#     if angle<0:
#         angle += 360
#     return angle

# def angle_conv(y, x):
# 	angle = math.atan2(y, x)
# 	if angle<0:
# 		angle += (2*math.pi)
# 	return angle

# def angle(measurement):
# 	if measurement < 0:
# 		measurement += (2*math.pi)	
# 	return measurement

# def angle2(measurement):
# 	if measurement < 3*math.pi/4:
# 		measurement += (5*math.pi/4)
# 		return measurement
# 	else:
# 		measurement -= (3*math.pi/4)
# 		return measurement

# # SORTING BEACONS

# # Finds angle of lidar start arm from global x axis (takes self.orientation)
# def angle3(orientation):
# 	start = orientation - 3*math.pi/4
# 	if start < 0:
# 		start += (2*math.pi)
# 	return start

# # Finds angle between angle3 and beacon (takes angle3 of orientation, and angle_conv of beacon point)
# def angle4(arm, beacon):
# 	angle = beacon - arm
# 	if angle < 0:
# 		angle += (2*math.pi)
# 	return angle

# def sort_beacons(orientation,BEACONS,x,y):
# 	arm = angle3(orientation)
# 	print 'arm: ', arm
# 	beacons = [angle_conv(BEACONS[i][1] - y, BEACONS[i][0] - x) for i in xrange(3)]
# 	print 'beacon relative angle to robot position: ', beacons
# 	order =[angle4(arm,beacon) for beacon in beacons]
# 	print 'angle between arm and beacons: ', order
# 	print 'sorted: ', sorted(zip(order,BEACONS))
# 	beacons_sort = [BEACONS for (order,BEACONS) in sorted(zip(order,BEACONS)) if order <= 3*math.pi/2]
# 	return beacons_sort

# orientation = 3*math.pi/2
# BEACONS = [(3000,0),(3000,2000),(0,1000)]
# x = 1500
# y = 0.000
# print sort_beacons(orientation,BEACONS,x,y)
